// Clearfix
// @include clearfix;
@mixin clearfix {
  .clearfix,
  .container {
    &:after,
    &:before {
      content: ".";
      display: block;
      height: 0;
      clear: both;
      visibility: hidden;
      clear: both;
      zoom: 1;
    }
    * html & { height: 1px }
  }
  .clear {
    clear: both;
    display: block;
    overflow: hidden;
    visibility: hidden;
    width: 0;
    height: 0;
  }
}

// Center Grid
// @include centerGrid;
@mixin centerGrid {
  .centerGrid {
    display: block;
    float: none;
    margin-left: auto;
    margin-right: auto;
  }
}

// Alpha and Omega - for Nested Grids
@mixin first-last {
  .alpha { margin-left: 0; }
  .omega { margin-right: 0; }
}

// Show and Hide Elements within Grid
@mixin hide-desktop {
  .hide-desktop { display: none; }
  .hide-mobile { display: block; }
}
@mixin hide-mobile {
  .hide-desktop { display: block; }
  .hide-mobile { display: none; }
}
@mixin show-mobile {
  .show-mobile { display: block;}
}
@mixin show-desktop {
  .show-desktop { display: block;}
}


// Desktop Grid Generator
//@include grid-generator(960px, 20px, 12);
@mixin grid-generator($width, $space, $rows: 12) {
  $content-width: $width;
  .container {
    width: $content-width;
    @include auto-center;
    [class*="grid-"] {
         display: inline;
         @include float-left;
         margin-left: $space/2;
         margin-right: $space/2;
    }
    @include centerGrid;
    @include first-last;

  @for $i from 1 through $rows {
    .grid-#{$i} { width: $content-width/($rows/$i) - $space; }
  }
  [class*="pull-"],
  [class*="push-"] {
    position: relative;
  }
  @for $i from 1 through $rows {
    .pull-#{$i} {
      left: -($content-width/($rows/$i));
    }
  }
  @for $i from 1 through $rows {
    .push-#{$i} {
      left: $content-width/($rows/$i);
    }
  }
  }
}

@mixin grid-fluid-generator($width, $space, $rows: 12) {
  $content-width: $width;

  .container {
    width: $content-width;
    margin-left: $space*2;
    margin-right: $space*2;
    [class*="grid-"] {
      display: inline;
      @include float-left;
      margin-left: $space/2;
      margin-right: $space/2;
      position: relative;
    }
    @include centerGrid;
    @include first-last;

    $fluid-grid-width: 100%;
    //$fluid-spacing: ($space)*2;

    @for $i from 1 through $rows {
      .grid-#{$i} {
        width: $fluid-grid-width/($rows/$i) - ($space);
      }
    }
    @for $i from 1 through $rows {
      .pull-#{$i} {
        left: -($fluid-grid-width/($rows/$i));
      }
    }
    @for $i from 1 through $rows {
      .push-#{$i} {
          left: $fluid-grid-width/($rows/$i);
      }
    }
  }
}


// Mobile Grid Generator - NO PUSH OR PULL
//@include grid-generator(480px, 20px, 12);
@mixin grid-generator-mobile($width: 92%, $space: 4%, $rows: 12) {
  $content-width: $width;
  $grid-width: 98%;
  $spacing: $space; // margin between elements
  #wrapper {
    @include auto-center;
    width: $width;
  }
  .container {
    width: $content-width;
    @include auto-center;
    [class*="grid-"] {
         display: inline;
         @include float-left;
         margin-left: $spacing;
         margin-right: $spacing;
         width: $grid-width;
    }
    @include centerGrid;
    @include first-last;

    [class*="pull-"],
    [class*="push-"] {
      left: 0;
    }
  }
}

// Fixed Grid Generator - with custom create
// @include fixed;
// @include gridCreate(1120px,20px,16);
@mixin fixed($width:960px, $space:20px, $rows:12) {
    @include grid-generator($width, $space, $rows);
}

// Fluid Grid Generator - with custom create
// @include fluid;
// @include gridCreate(92%,2%,16);
@mixin fluid($width:92%, $space:2%, $rows:12) {
    @include grid-fluid-generator($width, $space, $rows);
}

// Mobile Grid Generator
//@include mobile;
@mixin mobile($width:92%, $space:2%) {
    @include grid-generator-mobile($width, $space);
}


@mixin gridCreate($width, $space, $rows) {
  @include grid-generator($width, $space, $rows);
}



